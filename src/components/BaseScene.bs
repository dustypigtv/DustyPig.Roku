Sub Init()

    print "BaseScene:Init"

    m.top.backgroundURI = ""
    m.top.backgroundColor ="0x000000FF"

    m.loggedIn = false

    m.allViews =[]

    ' Landing view
    m.landingView = m.top.findNode("landingView")
    m.allViews.push(m.landingView)


    ' Login Account View
    m.loginAccountView = m.top.findNode("loginAccountView")
    m.allViews.push(m.loginAccountView)
    m.loginAccountView.observeField("switchToSignUpView", "OnShowView_SignUp")
    m.loginAccountView.observeField("switchToLoginProfileView", "OnShowView_LoginProfile")
    m.loginAccountView.observeField("switchToMainView", "OnShowView_Main")


    ' SignUp View
    m.signUpView = m.top.findNode("signupView")
    m.allViews.push(m.signUpView)
    m.signUpView.observeField("switchToLoginAccountView", "OnShowView_LoginAccount")
    m.signUpView.observeField("switchToLoginProfileView", "OnShowView_LoginProfile")
    m.signUpView.observeField("switchToMainView", "OnShowView_Main")


    ' Login Profile View
    m.loginProfileView = m.top.findNode("loginProfileView")
    m.allViews.push(m.loginProfileView)
    m.loginProfileView.observeField("switchToMainView", "OnShowView_Main")
    m.loginProfileView.observeField("switchToLoginAccountView", "OnShowView_LoginAccount")


    ' Main View
    m.mainView = m.top.findNode("mainView")
    m.allViews.push(m.mainView)
    ' *** Sub views of Main View ***

        m.homeScreenView = m.mainView.findNode("homeScreenView")
        m.homeScreenView.observeField("switchToLoginAccountView", "OnShowView_LoginAccount")
        m.homeScreenView.observeField("switchToMovieDetailsView", "OnShowView_MovieDetails")
        
    ' ******************************


    ' Movie Details View
    m.movieDetailsView = m.top.findNode("movieDetailsView")
    m.allViews.push(m.movieDetailsView)
    m.movieDetailsView.observeField("removeFromContinueWatching", "OnRelay_RemoveFromContinueWatching")
    m.movieDetailsView.observeField("addToWatchlist", "OnRelay_AddToWatchlist")
    m.movieDetailsView.observeField("removeFromWatchlist", "OnRelay_RemoveFromWatchlist")
    m.movieDetailsView.observeField("switchToAddToPlaylist", "OnShowView_AddToPlaylist")
    m.movieDetailsView.observeField("playVideo", "OnPlayVideo")

    
    ' Video View
    m.videoView = m.top.findNode("videoView")
    m.allViews.push(m.videoView)
    m.videoView.observeField("errorStr", "OnVideo_Error")


    
  

    ' Do this 3rd from last
    m.viewStack = []
    ShowView(m.landingView)
    

    ' Do this 2nd to last
    m.launchTask = CreateObject("roSGNode", "LaunchTask")
    m.launchTask.observeField("startAuthFlow", "OnShowView_LoginAccount")
    m.launchTask.observeField("startProfileFlow", "OnShowView_LoginProfile")
    m.launchTask.observeField("switchToMainView", "OnShowView_Main")
    m.launchTask.Control = "RUN"



    ' Do this LAST
    m.top.signalBeacon("AppLaunchComplete")

End Sub


Sub ShowView(node)

    print "BaseScene:ShowView"

    prev = m.viewStack.peek()
    if prev <> invalid then prev.visible = false    
    node.visible = true
    node.setFocus(true)
    m.viewStack.push(node)    

End Sub

Sub HideTopView()

    print "BaseScene:HideTopView"

   HideView(invalid)

end Sub

Sub HideView(node as Object)

    print "BaseScene:HideView"

    if node = invalid OR (m.viewStack.peek() <> invalid AND m.viewStack.peek().isSameNode(node))     
        last = m.viewStack.pop()
        last.visible = false        
        prev = m.viewStack.peek()
        if prev <> invalid then
            prev.visible = true
            prev.setFocus(true)    
        end if    
    end if

End Sub

Sub HideAllViews()

    for each item in m.allViews
        item.visible = false
    end for
    m.viewStack = []

End Sub





Sub OnShowView_LoginAccount(event as object)

    print "BaseScene:OnShowView_LoginAccount"

    if event.getData() then
        m.loggedIn = false
        HideAllViews()
        ShowView(m.loginAccountView)
    end if

End Sub

Sub OnShowView_SignUp(event as object)

    print "BaseScene:OnShowView_SignUp"

    if event.getData() then
        m.loggedIn = false
        HideAllViews()
        ShowView(m.signUpView)
    end if

End Sub


Sub OnShowView_LoginProfile(event as object)

    print "BaseScene:OnShowView_LoginProfile"

    if event.getData() then ShowView(m.loginProfileView)

End Sub


Sub OnShowView_Main(event as object)

    print "BaseScene:OnShowView_Main"

    if event.getData() then
        m.loggedIn = true
        HideAllViews()
        ShowView(m.mainView)
    end if 

End Sub



Sub OnShowView_MovieDetails(event as object)

    print "BaseScene:OnShowView_MovieDetails"

    node = event.getData()
    if node = invalid then return

    m.movieDetailsView.content = node
    ShowView(m.movieDetailsView)

End Sub


Sub OnRelay_RemoveFromContinueWatching(event as object)

    print "BaseScene:OnRelay_RemoveFromContinueWatching"

    m.homeScreenView.removeFromContinueWatching = event.getData()

End Sub


Sub OnRelay_AddToWatchlist(event as object)

    print "BaseScene:OnRelay_AddToWatchlist"

    m.homeScreenView.addToWatchlist = event.getData()

End Sub

Sub OnRelay_RemoveFromWatchlist(event as object)

    print "BaseScene:OnRelay_RemoveFromWatchlist"

    m.homeScreenView.removeFromWatchlist = event.getData()

End Sub


Sub OnShowView_AddToPlaylist(event as object)

    print "BaseScene:OnShowView_AddToPlaylist"

    print "*** ADD TO PLAYLIST ***"

End Sub

Sub OnPlayVideo(event as object)

    print "BaseScene:OnPlayVideo"

    data = event.getData()
    content = createObject("roSGNode", "ContentNode")
    content.id = data.id
    content.url = data.videoUrl
    content.streamFormat = "mp4"
    m.videoView.content = content
    m.videoView.control = "play"

    ShowView(m.videoView)
    
End Sub

Sub OnVideo_Error(event as object)

    print "BaseScene:OnVideo_Error"

    m.videoView.control = "stop"
        print event.getData()

End Sub











Function onKeyEvent(key as String, press as Boolean) as Boolean

    print "BaseScene:OnKeyEvent", key, press
    
    if not press then return false

    if key = "back" then

        if m.videoView.visible then 

            m.videoView.control = "stop"

        end if

        if not m.mainView.visible then HideTopView()
        return true

    end if

    return false

End Function