Sub Init()

    m.top.backgroundURI = ""
    m.top.backgroundColor ="0x000000FF"

    ' Singleton Views
    m.mainView = m.top.findNode("mainView")

    
    ' Observe Globals
    m.global.observeField("loggedOut", "OnGlobal_LoggedOut")
    m.global.observeField("pushView", "OnGlobal_PushView")
    m.global.observeField("popView", "PopTopView")
    m.global.observeField("startVideoPlayback", "OnGlobal_StartVideoPlayback")


    ' Setup View Stack
    m.viewStack = [m.top.findNode("launchView")]

    ' Do this LAST
    m.top.signalBeacon("AppLaunchComplete")

End Sub


Sub PushView(view)

    prev = m.viewStack.peek()
    if prev <> invalid then prev.visible = false

    m.viewStack.push(view)    
    m.top.appendChild(view)
    view.visible = true
    view.setFocus(true)
    
End Sub

Sub PopTopView()

    PopView(invalid)

end Sub

Sub PopView(view as Object)

    if view = invalid OR (m.viewStack.peek() <> invalid AND m.viewStack.peek().isSameNode(view))     
        
        last = m.viewStack.pop()
        last.visible = false
        m.top.removeChild(last)
        
        prev = m.viewStack.peek()
        if prev <> invalid then
            prev.visible = true
            prev.setFocus(true)    
        end if    
    end if

End Sub

Sub ResetViewStack()

    for each view in m.viewStack
        view.visible = false
    end for
    m.viewStack = []
    m.top.removeChildrenIndex(m.top.getChildCount(), 0)

End Sub

Sub OnGlobal_PushView(event as Object)

    view = event.getData()
    if view = invalid then return
    m.global.pushView = invalid
    PushView(view)

End Sub




Sub OnGlobal_LoggedOut(event as object)

    ResetViewStack()
    
    if event.getData() then
        PushView(CreateObject("roSGNode", "LoginAccountView"))
    else
        PushView(m.mainView)    
    end if

End Sub









Sub OnGlobal_StartVideoPlayback(event as object)

    if m.videoView.visible = false then PushView(m.videoView)
    
End Sub





Sub OnVideoView_PlaybackFinished(event as object)

    if event.getData() and m.videoView.visible then PopTopView()

End Sub





Function onKeyEvent(key as String, press as Boolean) as Boolean

    if not press then return false

    if key = "back" then

        ' if m.videoView.visible then 

        '     m.videoView.control = "stop"

        ' end if

        if not m.mainView.visible then PopTopView()
        return true

    end if

    return false

End Function