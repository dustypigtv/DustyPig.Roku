Sub Init()

    m.loggedIn = false

    ' Landing view
    m.landingView = m.top.findNode("landingView")

    ' Login Account View
    m.loginAccountView = m.top.findNode("loginAccountView")
    m.loginAccountView.observeField("switchToSignUpView", "SwitchToSignUpView")
    m.loginAccountView.observeField("switchToLoginProfileView", "SwitchToLoginProfileView")
    m.loginAccountView.observeField("switchToMainView", "SwitchToMainView")


    ' SignUp View
    m.signUpView = m.top.findNode("signupView")
    m.signUpView.observeField("switchToLoginAccountView", "SwitchToLoginAccountView")
    m.signUpView.observeField("switchToLoginProfileView", "SwitchToLoginProfileView")
    m.signUpView.observeField("switchToMainView", "SwitchToMainView")


    ' Login Profile View
    m.loginProfileView = m.top.findNode("loginProfileView")
    m.loginProfileView.observeField("cancel", "CancelLoginProfileView")
    m.loginProfileView.observeField("switchToMainView", "SwitchToMainView")
    m.loginProfileView.observeField("switchToLoginAccountView", "SwitchToLoginAccountView")


    ' Main View
    m.mainView = m.top.findNode("mainView")
    ' *** Sub views of Main View ***

        m.homeScreenView = m.mainView.findNode("homeScreenView")
        m.homeScreenView.observeField("switchToLoginAccountView", "SwitchToLoginAccountView")
        
    ' ******************************

    
    ' Video View
    m.videoView = m.top.findNode("videoView")

    m.viewStack = []
    ShowView(m.landingView)
    

    ' Do this 2nd to last
    m.launchTask = CreateObject("roSGNode", "LaunchTask")
    m.launchTask.observeField("startAuthFlow", "SwitchToLoginAccountView")
    m.launchTask.observeField("startProfileFlow", "SwitchToLoginProfileView")
    m.launchTask.observeField("switchToMainView", "SwitchToMainView")
    m.launchTask.Control = "RUN"

    ' Do this LAST
    m.top.signalBeacon("AppLaunchComplete")

End Sub


Sub ShowView(node)

    prev = m.viewStack.peek()
    if prev <> invalid then prev.visible = false    
    node.visible = true
    node.setFocus(true)
    m.viewStack.push(node)    

End Sub

Sub HideTopView()

   HideView(invalid)

end Sub

Sub HideView(node as Object)

    if node = invalid OR (m.viewStack.peek() <> invalid AND m.viewStack.peek().isSameNode(node))     
        last = m.viewStack.pop()
        last.visible = false        
        prev = m.viewStack.peek()
        if prev <> invalid then
            prev.visible = true
            prev.setFocus(true)    
        end if    
    end if

End Sub




Sub SwitchToLoginAccountView(event as object)

    if event.getData() then
        m.loggedIn = false
        ShowView(m.loginAccountView)
    end if

End Sub

Sub SwitchToSignUpView(event as object)

    if event.getData() then
        m.loggedIn = false
        ShowView(m.signUpView)
    end if

End Sub


Sub SwitchToLoginProfileView(event as object)

    if event.getData() then ShowView(m.loginProfileView)

End Sub


Sub SwitchToMainView(event as object)

    if event.getData() then
        m.loggedIn = true
        ShowView(m.mainView)
    end if 

End Sub



sub CancelLoginProfileView(event as object)

    if not event.getData() then return

    if m.loggedIn then
        ShowView(m.mainView)
    else
        ShowView(m.loginAccountView)
    end if

end sub
