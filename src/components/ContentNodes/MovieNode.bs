Sub Init()

    print "MovieNode:Init"

    m.top.observeField("data", "OnMovieNode_DataChanged")

End Sub

Sub OnMovieNode_DataChanged(event as object)

    print "MovieNode:OnMovieNode_DataChanged"

    data = event.getData()
    if data = invalid then return

    m.top.streamFormat = "mp4"
    m.top.contentType = 1 ' movie
    m.top.url = data.videoUrl
    m.top.sdBifUrl = data.bifUrl
    m.top.hdBifUrl = data.bifUrl
    m.top.fhdBifUrl = data.bifUrl
    m.top.length = data.length
    
    try
        m.top.secondaryTitle = left(data.date, 4)
    catch e
        m.top.secondaryTitle = "1900"
    end try


    ' From API
    ' public enum MovieRatings
    ' {
    '     None = 0,
    '     G = 1,
    '     PG = 2,
    '     PG_13 = 3,
    '     R = 4,
    '     NC_17 = 5,
    '     Unrated = 6
    ' }        
    if data.rated = 1 then 
       m.top.rating = "G"
    else if data.rated = 2 then 
       m.top.rating = "PG"
    else if data.rated = 3 then 
       m.top.rating = "PG-13"
    else if data.rated = 4 then 
       m.top.rating = "R"
    else if data.rated = 5 then 
       m.top.rating = "NC-17"
    else if data.rated = 6 then 
       m.top.rating = "Unrated"
    else  
       m.top.rating = "Not Rated"
    end if



    subtitleTracks = []
    if data.srtSubtitles <> invalid then
        for each st in data.srtSubtitles
            subtitleTracks.push({
                Language: "eng",
                Description: st.name,
                TrackName: st.url
            })
        end for
    end if

    m.top.subtitleTracks = subtitleTracks



    m.top.castCrew = createObject("roSGNode", "MovieNode")
       
    cast = createObject("roSGNode", "ContentNode")
    directors = createObject("roSGNode", "ContentNode")
    producers = createObject("roSGNode", "ContentNode")
    writers = createObject("roSGNode", "ContentNode")
    executiveProducers = createObject("roSGNode", "ContentNode")

    if data.credits <> invalid then 

        for each bp in data.credits

            item = invalid
            if bp.role = 1 then item = cast.createChild("BasicPersonNode")
            if bp.role = 2 then item = directors.createChild("BasicPersonNode")
            if bp.role = 3 then item = producers.createChild("BasicPersonNode")
            if bp.role = 4 then item = writers.createChild("BasicPersonNode")
            if bp.role = 5 then item = executiveProducers.createChild("BasicPersonNode")

            if item <> invalid then item.data = bp

        end for
            
        AddSectionIfHasPeople(cast, "Cast", false)
        AddSectionIfHasPeople(directors, "Director", true)
        AddSectionIfHasPeople(executiveProducers, "Executive Producer", true)
        AddSectionIfHasPeople(producers, "Producer", true)
        AddSectionIfHasPeople(writers, "Writer", true)

    end if
            
End Sub


Sub AddSectionIfHasPeople(child as object, singularName as string, addPlural as boolean)

    print "MovieDetailsTask:AddSectionIfHasPeople"
    
    if child.getChildCount() > 0 then

        child.title = singularName
        if addPlural and child.getChildCount() > 1 then child.title += "s"
        m.top.castCrew.appendChild(child)

    end if

End Sub