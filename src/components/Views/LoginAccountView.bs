sub Init()

    ' Find controls    
    m.headerLabel = m.top.findNode("headerLabel")
    m.emailTextBox = m.top.findNode("emailTextBox")
    m.passwordTextBox = m.top.findNode("passwordTextBox")
    m.loginAccountButton = m.top.findNode("loginAccountButton")
    m.signUpButton = m.top.findNode("signUpButton")
    m.busySpinner = m.top.findNode("busySpinner")
    
    
    ' Init controls
    m.headerLabel.color = m.global.defaultTheme.textOnBackground
    m.headerLabel.visible = true

    m.busySpinner.poster.blendColor = m.global.defaultTheme.primary
    
    m.loginAccountButton.focusBitmapUri = m.global.defaultTheme.primaryBitmap
    m.loginAccountButton.observeField("buttonSelected", "OnLoginAccountClicked")

    m.signUpButton.focusBitmapUri = m.global.defaultTheme.primaryBitmap
    m.signUpButton.observeField("buttonSelected", "OnSignUpClicked")


    
    

    ' Build keyboard dialog
    m.keyboardDialog = createObject("roSGNode", "StandardKeyboardDialog")
    m.keyboardDialog.buttons=["Cancel","OK"]
    m.keyboardDialog.observeField("wasClosed", "OnKeyboardDialogClosed")
    m.keyboardDialog.observeField("buttonSelected", "OnKeyboardDialogButtonSelected")

    
    ' Error dialog
    m.errorDialog = createObject("roSGNode", "StandardMessageDialog")
    m.errorDialog.buttons = ["OK"]
    m.errorDialog.title = "Sign In error"
    m.errorDialog.observeField("buttonSelected", "OnErrorDialogClosed")
    m.errorDialog.observeField("wasClosed", "OnErrorDialogClosed")



    ' Sign In task
    m.loginAccountTask = CreateObject("roSGNode", "LoginAccountTask")
    m.loginAccountTask.observeField("data", "OnLoginAccountResult")


    'variables
    m.lastSelected = invalid
    m.alreadyAskedChannelStore = false

    ' Observe this.visible
    m.top.observeField("visible", "OnVisibleChanged")

end sub


' Fires when this view's visibility changes
Sub OnVisibleChanged(event as object)
    
    m.busySpinner.visible = false
    if not event.getData() then return

    m.lastSelected = m.emailTextBox
    ShowControls(true)

    ' Test user
    appInfo = CreateObject("roAppInfo")
    if appInfo.isDev()
       
        m.emailTextBox.text = "testuser@dustypig.tv"
        m.passwordTextBox.text = "test password"
            
    else if m.alreadyAskedChannelStore = false

        m.alreadyAskedChannelStore = true
        m.channelStore = CreateObject("roSGNode", "ChannelStore")
        
        ' Set sign-in context for RFI screen
        info = CreateObject("roSGNode", "ContentNode")
        info.addFields({context: "signin"})
        m.channelStore.requestedUserDataInfo = info
        
        m.channelStore.requestedUserData = "email"
        m.channelStore.observeField("userData", "OnChannelStoreGetEmail")
        m.channelStore.command = "getUserData"
        
    end if
    

End Sub


sub OnChannelStoreGetEmail()

    if m.channelStore.userData <> invalid then
         m.emailTextBox.text = m.channelStore.userData.email
        FocusOnTB(m.passwordTextBox)
    end if

end sub


Sub ShowControls(s as boolean)

    if not s then

        if m.emailTextBox.hasFocus() then m.lastSelected = m.emailTextBox
        if m.passwordTextBox.hasFocus() then m.lastSelected = m.passwordTextBox
    
    end if

    m.headerLabel.visible = s
    m.emailTextBox.visible = s
    m.passwordTextBox.visible = s
    m.loginAccountButton.visible = s
    m.signUpButton.visible = s

    if s then FocusOnTB(m.lastSelected)

End Sub


Sub FocusOnTB(tb as object)

    m.emailTextBox.textColor = "#808080"
    m.passwordTextBox.textColor = "#808080"

    if tb = invalid then tb = m.emailTextBox

    tb.setFocus(true)
    tb.textColor = m.global.defaultTheme.primary

End Sub


Sub FocusOnButton(btn as object)

    m.emailTextBox.textColor = "#808080"
    m.passwordTextBox.textColor = "#808080"

    if btn = invalid then btn = m.loginAccountButton

    btn.setFocus(true)

End Sub


Sub OnKeyboardDialogClosed()

    ShowControls(true)

End Sub


Sub OnKeyboardDialogButtonSelected(event as object)

    m.top.getScene().dialog = invalid
    idx = event.getData()
    selectLogin = false
    if idx = 1 then 
        m.lastSelected.text = m.keyboardDialog.text
        if m.lastSelected.id = m.emailTextBox.id and m.emailTextBox.text = "testuser@dustypig.tv" then 
            m.passwordTextBox.text = "test password"
            selectLogin = true
        end if
    end if
    ShowControls(true)
    if selectLogin then FocusOnButton(m.loginAccountButton)
    
End Sub


Sub OnErrorDialogClosed()

    m.top.getScene().dialog = invalid
    ShowControls(true)

End Sub


Sub OnLoginAccountClicked()

    m.loginAccountButton.setFocus(false)
    m.busySpinner.visible = true

    m.loginAccountTask.email = m.emailTextBox.text
    m.loginAccountTask.password = m.passwordTextBox.text
    m.loginAccountTask.control = "RUN"

End sub


Sub OnSignUpClicked()

    m.top.switchToSignUpView = true

End Sub

Function GetCredentials() as object

    email = m.emailTextBox.text
    if email = invalid or email = "" then return invalid

    password = m.passwordTextBox.text
    if password = invalid or password = "" then return invalid

    return { "email": email, "password": password }

End Function






Sub OnLoginAccountResult()

    m.loginAccountButton.setFocus(true)
    m.busySpinner.visible = false

    result = m.loginAccountTask.data
    if result.success then

        data = result.data
        if data.loginType = 1 then
            m.top.switchToMainView = true
        else
            m.top.switchToLoginProfileView = true
        end if
        
    else
        
        ShowControls(false)
        m.errorDialog.message = [result.error]
        m.top.getScene().dialog = m.errorDialog

    end if

End Sub



Function onKeyEvent(key as String, press as Boolean) as Boolean

    if not press then return false

    if key = "back" then return true

    if key = "up" then
        if m.passwordTextBox.hasFocus() then
            FocusOnTB(m.emailTextBox)
            return true
        else if m.loginAccountButton.hasFocus() then
            FocusOnTB(m.passwordTextBox)
            return true
        else if m.signUpButton.hasFocus() then
            credentials = GetCredentials()
            if credentials = invalid then
                FocusOnTB(m.passwordTextBox)
            else
                FocusOnButton(m.loginAccountButton)
            end if
            return true
        end if
    end if

    if key = "down" then
        if m.emailTextBox.hasFocus() then
            FocusOnTB(m.passwordTextBox)
            return true
        else if m.passwordTextBox.hasFocus() then
            credentials = GetCredentials()
            if credentials = invalid then 
                FocusOnButton(m.signUpButton)
            else
                FocusOnButton(m.loginAccountButton)
            end if
            return true
        else if m.loginAccountButton.hasFocus() then
            FocusOnButton(m.signUpButton)
            return true
        end if
    end if

    if key = "OK" then 

        if m.emailTextBox.hasFocus() or m.passwordTextBox.hasFocus() then

            if m.emailTextBox.hasFocus() then
                 m.keyboardDialog.title = "Email Address:"
                 m.keyboardDialog.keyBoardDomain = "email"
            else
                m.keyboardDialog.title = "Password:"
                m.keyboardDialog.keyBoardDomain = "password"
            end if

            m.keyboardDialog.text = m.lastSelected.text
            m.keyboardDialog.textEditBox.secureMode = m.passwordTextBox.hasFocus()
            

            ShowControls(false)
            m.top.getScene().dialog = m.keyboardDialog
            return true

        end if

        ' Return button click sound
        if m.loginAccountButton.hasFocus() or m.signUpButton.hasFocus() return true

    end if

    return false

End Function
