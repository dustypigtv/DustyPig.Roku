Sub Init()

    print "MovieDetailsView:Init"

    ' Find controls    
    m.busySpinner = m.top.findNode("busySpinner")
    m.backdropPoster = m.top.findNode("backdropPoster")
    m.titleLabel = m.top.findNode("titleLabel")
    m.yearLabel = m.top.findNode("yearLabel")
    m.ratedLabel = m.top.findNode("ratedLabel")
    m.lengthLabel = m.top.findNode("lengthLabel")
    m.remainingLabel = m.top.findNode("remainingLabel")
    m.playButton = m.top.findNode("playButton")
    m.requestButton = m.top.findNode("requestButton")
    m.resumeButton = m.top.findNode("resumeButton")
    m.markWatchedButton = m.top.findNode("markWatchedButton")
    m.watchlistButton = m.top.findNode("watchlistButton")
    m.addToPlaylistButton = m.top.findNode("addToPlaylistButton")
    m.descriptionLabel = m.top.findNode("descriptionLabel")
    m.castCrewRowList = m.top.findNode("castCrewRowList")
    m.selectedPersonLabel = m.top.findNode("selectedPersonLabel")

    m.playbackButtonLayoutGroup = m.top.findNode("playbackButtonLayoutGroup")
    m.otherActionButtonLayoutGroup = m.top.findNode("otherActionButtonLayoutGroup")

    ' Tracking focus
    m.lastFocusedControl = invalid

    m.lastPlaybackButtonFocused = m.playButton
    m.playButton.observeField("focusedChild", "OnPlaybackButtons_FocusChanged")
    m.requestButton.observeField("focusedChild", "OnPlaybackButtons_FocusChanged")
    m.resumeButton.observeField("focusedChild", "OnPlaybackButtons_FocusChanged")
    m.markWatchedButton.observeField("focusedChild", "OnPlaybackButtons_FocusChanged")

    m.lastOtherActionButtonFocused = m.watchlistButton
    m.watchlistButton.observeField("focusedChild", "OnOtherActionButtons_FocusChanged")
    m.addToPlaylistButton.observeField("focusedChild", "OnOtherActionButtons_FocusChanged")

    m.castCrewRowList.observeField("focusedChild", "OnCastCrewList_FocusChanged")
    m.castCrewRowList.observeField("rowItemFocused", "OnCastCrewList_ItemFocused")


    ' Button clicks
    m.playButton.observeField("buttonSelected", "OnPlayButton_Selected")
    m.requestButton.observeField("buttonSelected", "OnRequestButton_Selected")
    m.resumeButton.observeField("buttonSelected", "OnResumeButton_Selected")
    m.markWatchedButton.observeField("buttonSelected", "OnMarkWatchedButton_Selected")
    m.watchlistButton.observeField("buttonSelected", "OnWatchlistButton_Selected")
    m.addToPlaylistButton.observeField("buttonSelected", "OnAddToPlaylistButton_Selected")



    ' Error dialog
    m.errorDialog = createObject("roSGNode", "StandardMessageDialog")
    m.errorDialog.buttons = ["OK"]
    m.errorDialog.title = "Error"
    m.errorDialog.observeField("buttonSelected", "OnErrorDialog_Closed")


    ' Movie Details task
    m.movieDetailsTask = CreateObject("roSGNode", "MovieDetailsTask")
    m.movieDetailsTask.observeField("data", "OnMovieDetailsTask_DataAvailable")


    ' Mark Watched task
    m.markMovieWatchedTask = CreateObject("roSGNode", "MarkMovieWatchedTask")

    ' Toggle Watchlist task
    m.toggleWatchlistTask = CreateObject("roSGNode", "ToggleWatchlistTask")


    ' Observers
    m.top.observeField("visible", "OnThis_VisibleChanged")
    m.top.observeField("content", "OnThis_ContentChanged")

end sub


Sub OnThis_VisibleChanged(event as object)

    print "MovieDetailsView:OnThis_VisibleChanged"

    if event.getData() then 
        RestoreFocus()
    else
        m.movieDetailsTask.control = "stop"
    end if

End Sub



Sub RestoreFocus()

    print "MovieDetailsView:RestoreFocus"

    if m.lastFocusedControl <> invalid then

        print "*****", m.lastFocusedControl.id

        if m.lastFocusedControl.visible then
            m.lastFocusedControl.setFocus(true)
        else
            if m.playButton.visible then
                m.playButton.setFocus(true)
            else if m.requestButton.visible then
                m.requestButton.setFocus(true)
            else if m.castCrewRowList.visible then
                m.castCrewRowList.setFocus(true)
            end if
        end if

    end if

End Sub


Sub OnPlaybackButtons_FocusChanged(event as object)

    print "MovieDetailsView:OnPlaybackButtons_FocusChanged"

    if m.playbackButtonLayoutGroup.isInFocusChain() then
        m.lastPlaybackButtonFocused = event.getRoSGNode()
        m.lastFocusedControl = m.lastPlaybackButtonFocused
    end if

End Sub

Sub OnOtherActionButtons_FocusChanged(event as object)

    print "MovieDetailsView:OnOtherActionButtons_FocusChanged"

    if m.otherActionButtonLayoutGroup.isInFocusChain() then
        m.lastOtherActionButtonFocused = event.getRoSGNode()
        m.lastFocusedControl = m.lastOtherActionButtonFocused
    end if

End Sub


Sub OnErrorDialog_Closed()

    print "MovieDetailsView:OnErrorDialog_Closed"

    m.top.getScene().dialog = invalid
    RestoreFocus()

End Sub


Sub OnCastCrewList_ItemFocused()

    print "MovieDetailsView:OnCastCrewList_ItemFocused"

    idx = m.castCrewRowList.rowItemFocused
    rowContent = m.castCrewRowList.content.getChild(idx[0])
    selItem = rowContent.getChild(idx[1])
    m.selectedPersonLabel.text = selItem.title

End sub


Sub OnCastCrewList_FocusChanged()

    print "MovieDetailsView:OnCastCrewList_FocusChanged"

    if m.castCrewRowList.hasFocus() then 
        m.lastFocusedControl = m.castCrewRowList    
    else
        m.selectedPersonLabel.text = invalid 
    end if

End Sub


' Fires when the BaseScene sets the Content node
Sub OnThis_ContentChanged()

    print "MovieDetailsView:OnThis_ContentChanged"

    m.movieDetailsTask.control = "stop"
    
    
    ' Reset
    m.titleLabel.text = invalid
    m.yearLabel.text = invalid
    m.ratedLabel.text = invalid
    m.lengthLabel.text = invalid
    m.remainingLabel.text = invalid
    m.playButton.visible = false
    m.requestButton.visible = false
    m.resumeButton.visible = false
    m.markWatchedButton.visible = false
    m.watchlistButton.visible = false
    m.playButton.visible = false
    m.descriptionLabel.text = invalid
    m.castCrewRowList.content = invalid
    m.selectedPersonLabel.text = invalid
    m.busySpinner.visible = true

    m.lastOtherActionButtonFocused = m.watchlistButton


    ' Load
    content = m.top.content
    
    m.movieDetailsTask.id = content.id
    m.movieDetailsTask.control = "run"

    m.backdropPoster.uri = content.backdropUrl ?? ""
    
End Sub


Sub OnMovieDetailsTask_DataAvailable()

    print "MovieDetailsView:OnMovieDetailsTask_DataAvailable"

    if not m.top.visible then return

    m.busySpinner.visible = false

    result = m.movieDetailsTask.data
    if result.success then
        
        m.data = result.data
        m.titleLabel.text = m.data.title
        m.yearLabel.text = m.data.year
        m.ratedLabel.text = "Rated: " + m.data.rated

        if m.data.length <> invalid and m.data.length > 0 then m.lengthLabel.text = GetDurationString(m.data.length)

        if m.data.canPlay then
           
            m.playButton.text = "Play"

            if m.data.length <> invalid and m.data.length > 0 and m.data.played <> invalid and m.data.played > 60 then 
                m.remainingLabel.text = GetDurationString(m.data.length - m.data.played) + " remaining"
                m.resumeButton.visible = true
                m.resumeButton.setFocus(true)
                m.markWatchedButton.visible = true
            end if

            m.playButton.visible = true

            m.watchlistButton.icon = m.data.inWatchList ? "pkg:/images/check.png" : "pkg:/images/add.png"
            m.watchlistButton.visible = true
            
            m.addToPlaylistButton.visible = true
        
        else

            m.requestButton.visible = true

        end if
        
        if not m.resumeButton.visible then 
            if m.playButton.visible then 
                m.playButton.setFocus(true)
            else if m.requestButton.visible then 
                m.requestButton.setFocus(true)
            end if
        end if


        m.descriptionLabel.text = m.data.description

        m.castCrewRowList.content = m.movieDetailsTask.castCrew
        

        
    else if result.statusCode = 401 then
    
        m.top.showView_LoginAccount = true
    else
    
        m.errorDialog.message = [result.error]
        m.top.getScene().dialog = m.errorDialog
    
    end if

End Sub


Sub OnPlayButton_Selected()

    print "MovieDetailsView:OnPlayButton_Selected"

    StartPlayback(false)

End Sub

Sub OnResumeButton_Selected()

    print "MovieDetailsView:OnResumeButton_Selected"

    StartPlayback(true)

End Sub


Sub StartPlayback(resume as boolean)

    print "MovieDetailsView:StartPlayback", resume

    playStart = resume ? m.data.played : 0

    subtitleTracks = []
    if m.data.srtSubtitles <> invalid then
        for each st in m.data.srtSubtitles
            subtitleTracks.push({
                Language:"eng",
                Description:st.name,
                TrackName:st.url
            })
        end for
    end if

    m.top.playVideo = {
        id:m.data.id,
        contentType:"movie",
        title:m.data.title,
        secondaryTitle:m.data.year,
        url:m.data.videoUrl,
        playStart:playStart,
        SDBifUrl:m.data.bifUrl,
        HDBifUrl:m.data.bifUrl,
        FHDBifUrl:m.data.bifUrl,
        subtitleTracks:subtitleTracks
    }

End Sub




Sub OnRequestButton_Selected()

    print "MovieDetailsView:OnRequestButton_Selected"

End Sub







Sub OnMarkWatchedButton_Selected()

    print "MovieDetailsView:OnMarkWatchedButton_Selected"

    m.markMovieWatchedTask.id = m.data.id
    m.markMovieWatchedTask.control = "run"
    m.data.played = 0
    m.playButton.setFocus(true)
    m.markWatchedButton.visible = false
    m.resumeButton.visible = false
    m.remainingLabel.text = "invalid"
    m.top.relay_RemoveFromContinueWatching = m.data.id

End Sub




Sub OnWatchlistButton_Selected()

    print "MovieDetailsView:OnWatchlistButton_Selected"

    m.toggleWatchlistTask.control = "stop"
    
    add = not m.data.inWatchList
    id = m.data.id

    m.toggleWatchlistTask.add = add
    m.toggleWatchlistTask.id = id
    m.toggleWatchlistTask.control = "run"

    m.watchlistButton.icon = add ? "pkg:/images/check.png" : "pkg:/images/add.png"
    if add then 
    
        node = createObject("roSGNode", "ContentNode")
        node.setFields({
            id:m.data.id,
            title:m.data.title,
            description:m.data.description,
            FHDGRIDPOSTERURL:m.data.artworkUrl
        })

        ' Movie = 1
        node.addFields({backdropUrl: m.data.backdropUrl, mediaType: 1})
        m.top.relay_AddToWatchlist = node
    
    else 
        m.top.relay_RemoveFromWatchlist = id
    end if

    
End Sub



Sub OnAddToPlaylistButton_Selected()

    print "MovieDetailsView:OnAddToPlaylistButton_Selected"

    m.top.relay_switchToAddToPlaylist = {
        id:m.data.id,
        mediaType:m.data.mediaType
    }

End Sub



Function onKeyEvent(key as String, press as Boolean) as Boolean

    print "MovieDetailsView:OnKeyEvent", key, press
    
    if not press then return false

    if key = "right" then

        if m.playButton.hasFocus() and m.resumeButton.visible then 
            
            m.resumeButton.setFocus(true)
            return true
        
        end if

        if m.resumeButton.hasFocus() then

            m.markWatchedButton.setFocus(true)
            return true

        end if

        if m.watchlistButton.hasFocus() then

            m.addToPlaylistButton.setFocus(true)
            return true

        end if

    end if




    if key = "left" then

        if m.markWatchedButton.hasFocus() then

            m.resumeButton.setFocus(true)
            return true

        end if

        if m.resumeButton.hasFocus() then 

            m.playButton.setFocus(true)
            return true
        
        end if

        if m.addToPlaylistButton.hasFocus() then

            m.watchlistButton.setFocus(true)
            return true

        end if

    end if


    if key = "up" then

        if m.otherActionButtonLayoutGroup.isInFocusChain() then

            m.lastPlaybackButtonFocused.setFocus(true)
            return true

        end if

        if m.castCrewRowList.isInFocusChain() then

            m.lastOtherActionButtonFocused.setFocus(true)
            return true

        end if

    end if



    if key = "down" then

        if m.playbackButtonLayoutGroup.isInFocusChain() then

            m.lastOtherActionButtonFocused.setFocus(true)
            return true

        end if

        if m.otherActionButtonLayoutGroup.isInFocusChain() then

            m.castCrewRowList.setFocus(true)
            return true

        end if

    end if


    
    return false

End Function
