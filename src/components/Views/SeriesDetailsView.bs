Sub Init()

    m.mainLayout = m.top.findNode("mainLayout")
    m.busySpinner = m.top.findNode("busySpinner")
    m.backdropPoster = m.top.findNode("backdropPoster")
    m.titleLabel = m.top.findNode("titleLabel")
    m.ratedLabel = m.top.findNode("ratedLabel")
    m.playButton1 = m.top.findNode("playButton1")
    m.playButton2 = m.top.findNode("playButton2")
    m.requestButton = m.top.findNode("requestButton")
    m.resumeButton = m.top.findNode("resumeButton")
    m.markWatchedButton = m.top.findNode("markWatchedButton")
    m.watchlistButton1 = m.top.findNode("watchlistButton1")
    m.watchlistButton2 = m.top.findNode("watchlistButton2")
    m.addToPlaylistButton1 = m.top.findNode("addToPlaylistButton1")
    m.addToPlaylistButton2 = m.top.findNode("addToPlaylistButton2")
    m.descriptionLabel = m.top.findNode("descriptionLabel")
    m.castCrewGroup = m.top.findNode("castCrewGroup")
    m.castCrewRowList = m.top.findNode("castCrewRowList")
    m.selectedPersonLabel = m.top.findNode("selectedPersonLabel")
    m.episodesGroup = m.top.findNode("episodesGroup")
    m.seasonList = m.top.findNode("seasonList")
    m.episodesList = m.top.findNode("episodesList")
    m.divider = m.top.findNode("divider")

    m.playbackButtonLayoutGroup = m.top.findNode("playbackButtonLayoutGroup")
    m.resumeButtonLayoutGroup = m.top.findNode("resumeButtonLayoutGroup")

    m.episodesOrCastCrewRowList = m.top.findNode("episodesOrCastCrewRowList")

    m.slideUpAnimation = m.top.findNode("slideUpAnimation")
    m.slideDownAnimation = m.top.findNode("slideDownAnimation")



    ' Tracking focus
    m.lastFocusedControl = invalid
    m.lastFocusedButton = invalid

    m.requestButton.observeField("focusedChild", "OnButton_FocusChanged")
    m.playButton1.observeField("focusedChild", "OnButton_FocusChanged")
    m.playButton2.observeField("focusedChild", "OnButton_FocusChanged")
    m.resumeButton.observeField("focusedChild", "OnButton_FocusChanged")
    m.markWatchedButton.observeField("focusedChild", "OnButton_FocusChanged")
    m.watchlistButton1.observeField("focusedChild", "OnButton_FocusChanged")
    m.watchlistButton2.observeField("focusedChild", "OnButton_FocusChanged")
    m.addToPlaylistButton1.observeField("focusedChild", "OnButton_FocusChanged")
    m.addToPlaylistButton2.observeField("focusedChild", "OnButton_FocusChanged")

    m.episodesOrCastCrewRowList.observeField("rowItemFocused", "OnEpisodesOrCastCrewList_ItemFocused")
    m.episodesOrCastCrewRowList.observeField("focusedChild", "OnEpisodesOrCastCrewList_ItemFocused")


    ' Button clicks
    m.requestButton.observeField("buttonSelected", "OnRequestButton_Selected")
    m.playButton1.observeField("buttonSelected", "OnPlayButton_Selected")
    m.playButton2.observeField("buttonSelected", "OnPlayButton_Selected")
    m.resumeButton.observeField("buttonSelected", "OnResumeButton_Selected")
    m.markWatchedButton.observeField("buttonSelected", "OnMarkWatchedButton_Selected")
    m.watchlistButton1.observeField("buttonSelected", "OnWatchlistButton_Selected")
    m.watchlistButton2.observeField("buttonSelected", "OnWatchlistButton_Selected")
    m.addToPlaylistButton1.observeField("buttonSelected", "OnAddToPlaylistButton_Selected")
    m.addToPlaylistButton2.observeField("buttonSelected", "OnAddToPlaylistButton_Selected")



    ' Error dialog
    m.errorDialog = createObject("roSGNode", "StandardMessageDialog")
    m.errorDialog.buttons = ["OK"]
    m.errorDialog.title = "Error"
    m.errorDialog.observeField("buttonSelected", "OnErrorDialog_Closed")

     ' Series Details task
     m.seriesDetailsTask = CreateObject("roSGNode", "SeriesDetailsTask")
     m.seriesDetailsTask.observeField("success", "OnSeriesDetailsTask_DataAvailable")
 
 
     ' Mark Watched task
    '  m.markSeriesWatchedTask = CreateObject("roSGNode", "MarkSeriesWatchedTask")
 
     ' Toggle Watchlist task
     m.toggleWatchlistTask = CreateObject("roSGNode", "ToggleWatchlistTask")
 
 
     ' Observers
     m.top.observeField("visible", "OnThis_VisibleChanged")

End sub



Sub OnThis_VisibleChanged(event as object)

    m.seriesDetailsTask.control = "stop"

    m.mainLayout.translation = [192,106]
    m.titleLabel.text = invalid
    m.ratedLabel.text = invalid
    m.descriptionLabel.text = invalid
    m.selectedPersonLabel.text = invalid
    m.castCrewGroup.visible = false
    m.episodesGroup.visible = false

    m.playbackButtonLayoutGroup.visible = false
    m.resumeButtonLayoutGroup.visible = false
    m.requestButton.visible = false

    m.divider.visible = false
    m.episodesOrCastCrewRowList.visible = false
    m.castCrewRowList.visible = false


    BuildEpisodesOrCastCrewNode(false)
    
    if event.getData() then

        m.backdropPoster.uri = m.global.currentBasicMedia.backdropUrl ?? ""

        m.busySpinner.visible = true
        
        m.seriesDetailsTask.id = m.global.currentBasicMedia.id
        m.seriesDetailsTask.control = "run"
    
    end if

End Sub



Sub RestoreFocus()

    if m.lastFocusedControl <> invalid then m.lastFocusedControl.setFocus(true)

End Sub


Function GetEpisodeOrCastCrewListSelectedIndex() as integer

    idx = m.episodesOrCastCrewRowList.rowItemFocused
    if idx = invalid then return 0
    if idx.count() < 2 then return 0
    if not m.castCrewRowList.visible then return 0

    return idx[1]

End Function

Sub OnEpisodesOrCastCrewList_ItemFocused()

    idx = GetEpisodeOrCastCrewListSelectedIndex()

    if idx = 0 then
        m.castCrewGroup.visible = false
        m.episodesGroup.visible = true
    else
        m.episodesGroup.visible = false
        m.castCrewGroup.visible = true
    end if

End Sub


Sub OnButton_FocusChanged(event as object)

    btn = event.getRoSGNode()
    if btn.hasFocus() then 
        m.lastFocusedControl = btn
        m.lastFocusedButton = btn
    end if

End Sub


Sub OnErrorDialog_Closed()

    m.top.getScene().dialog = invalid
    RestoreFocus()

End Sub





Sub OnSeriesDetailsTask_DataAvailable()
       

    if m.seriesDetailsTask.success then
    
        m.global.currentDetailedMedia = m.seriesDetailsTask.data
        
        m.titleLabel.text = m.global.currentDetailedMedia.title

        rated = m.global.currentDetailedMedia.rating
        if rated <> "Not Rated" then rated = "Rated: " + rated
        m.ratedLabel.text = rated

        if m.global.currentDetailedMedia.canPlay then
           
            if m.global.currentDetailedMedia.length > 0 and m.global.playbackPosition > 0 then 
                m.requestButton.visible = false
                m.playbackButtonLayoutGroup.visible = false
                m.resumeButtonLayoutGroup.visible = true
                m.resumeButton.setFocus(true)
            else
                m.requestButton.visible = false
                m.resumeButtonLayoutGroup.visible = false
                m.playbackButtonLayoutGroup.visible = true
                m.playButton1.setFocus(true)
            end if

            SetWatchlistIcon(m.global.currentDetailedMedia.inWatchList)
        
        else

            m.playbackButtonLayoutGroup.visible = false
            m.resumeButton.visible = false
            m.requestButton.visible = true

        end if
        
        m.descriptionLabel.text = m.global.currentDetailedMedia.description
        

        m.episodesOrCastCrewRowList.visible = true
        m.castCrewRowList.visible = true
        m.episodesGroup.visible = true
        m.divider.visible = true 
       

        m.seasonList.content = m.global.currentDetailedMedia.seasons
        m.episodesList.content = m.global.currentDetailedMedia.episodes

        try
            found = false
            for seasonIdx = 0 to m.global.currentDetailedMedia.seasons.getChildCount() - 1
                season = m.global.currentDetailedMedia.seasons.getChild(seasonIdx)
                for episodeIdx = 0 to season.getChildCount() - 1
                    episode = season.getChild(episodeIdx)
                    if episode.upNext then
                        m.seasonList.jumpToItem = seasonIdx
                        found = true
                        exit for
                    end if
                end for
                if found then exit for
            end for
        catch ex
        end try
       
        

        m.castCrewRowList.content = m.global.currentDetailedMedia.castCrew
        m.castCrewRowList.numRows = m.global.currentDetailedMedia.castCrew.getChildCount()
        BuildEpisodesOrCastCrewNode(m.castCrewRowList.numRows > 0)
        
        RestoreFocus()

        m.busySpinner.visible = false

    else
    
        m.errorDialog.message = [m.seriesDetailsTask.error]
        m.top.getScene().dialog = m.errorDialog
    
    end if

End Sub


Sub OnPlayButton_Selected()

    StartPlayback(false)

End Sub

Sub OnResumeButton_Selected()

    StartPlayback(true)

End Sub


Sub StartPlayback(resume as boolean)

    ' m.global.currentDetailedMedia.playStart = resume ? m.global.playbackPosition : 0.0
    ' m.global.startVideoPlayback = true
    
End Sub




Sub OnRequestButton_Selected()

End Sub







Sub OnMarkWatchedButton_Selected()

    ' m.markSeriesWatchedTask.id = m.global.currentDetailedMedia.id
    ' m.markSeriesWatchedTask.control = "run"

    m.global.playbackPosition = 0
    m.global.removeFromContinueWatching = m.global.currentDetailedMedia.id

    m.resumeButtonLayoutGroup.visible = false
    m.playbackButtonLayoutGroup.visible = true
    m.playButton1.setFocus()

End Sub




Sub OnWatchlistButton_Selected()
    
    del = m.global.currentDetailedMedia.inWatchList ?? false

    if del then
        m.global.removeFromWatchlist = m.global.currentDetailedMedia.id        
    else
        m.global.addToWatchlist = BuildBasicMediaFromDetailed(m.global.currentDetailedMedia)
    end if

    m.global.currentDetailedMedia.inWatchList = not del
    SetWatchlistIcon(not del)

    m.toggleWatchlistTask.control = "stop"
    m.toggleWatchlistTask.add = not del
    m.toggleWatchlistTask.id = m.global.currentDetailedMedia.id
    m.toggleWatchlistTask.control = "run"
    
End Sub



Sub OnAddToPlaylistButton_Selected()

    ' m.top.relay_switchToAddToPlaylist = {
    '     id:m.global.currentMedia.id,
    '     mediaType:m.global.currentMedia.mediaType
    ' }

End Sub



Sub OnGlobal_AddToContinueWatching()

    if m.seriesDetailsTask.id <> m.global.currentDetailedMedia.id then return

    prevFocusId = m.lastFocusedControl = invalid ? "" : m.lastFocusedControl.id
    if prevFocusId = m.playButton1.id then
        m.lastFocusedControl = m.playButton2
    else if prevFocusId = m.watchlistButton1.id then
        m.lastFocusedControl = m.watchlistButton2
    else if prevFocusId = m.addToPlaylistButton1.id then
        m.lastFocusedControl = m.addToPlaylistButton2
    end if
    
    setFocus = not m.castCrewRowList.hasFocus()

    m.playbackButtonLayoutGroup.visible = false
    m.resumeButtonLayoutGroup.visible = true

    if m.top.visible and setFocus and m.lastFocusedControl <> invalid then m.lastFocusedControl.setFocus(true)
    
End sub


Sub OnGlobal_RemoveFromContinueWatching()

    if m.seriesDetailsTask.id <> m.global.currentDetailedMedia.id then return

    prevFocusId = m.lastFocusedControl = invalid ? "" : m.lastFocusedControl.id

    if prevFocusId = m.playButton2.id then
        m.lastFocusedControl = m.playButton1
    else if prevFocusId = m.resumeButton.id then
        m.lastFocusedControl = m.playButton1
    else if prevFocusId = m.markWatchedButton.id then
        m.lastFocusedControl = m.playButton1
    else if prevFocusId = m.watchlistButton2.id then
        m.lastFocusedControl = m.watchlistButton1
    else if prevFocusId = m.addToPlaylistButton2.id then
        m.lastFocusedControl = m.addToPlaylistButton1
    end if

    setFocus = not m.castCrewRowList.hasFocus()

    m.resumeButtonLayoutGroup.visible = false
    m.playbackButtonLayoutGroup.visible = true

    if m.top.visible and setFocus and m.lastFocusedControl <> invalid then m.lastFocusedControl.setFocus(true)

End sub




Sub OnGlobal_PlaybackPositionChanged()

    ' if m.seriesDetailsTask.id <> m.global.currentDetailedMedia.id then return

    ' m.remainingLabel.text = GetDurationString(m.global.currentDetailedMedia.length - m.global.playbackPosition) + " remaining"
    ' m.resumeButton.visible = true
    ' m.markWatchedButton.visible = true

End Sub


Sub SetWatchlistIcon(inWatchList as boolean)

    m.watchlistButton1.icon = inWatchList ? "pkg:/images/check.png" : "pkg:/images/add.png"
    m.watchlistButton2.icon = m.watchlistButton1.icon

End Sub


Sub BuildEpisodesOrCastCrewNode(includeCastCrew as boolean) 

    ' <ContentNode role="content">
    ' <!-- Row -->
    ' <ContentNode>
    '     <!-- 
    '         Items
    '         - - - - -
    '         "Episodes".width = 147
    '         "Cast & Crew".width = 202
    '         Give 5px extra on each side
    '     -->
    '     <LabelNode title="Episodes" fhdItemWidth="157" />
    '     <LabelNode title="Cast &amp; Crew"  fhdItemWidth="212" />
    ' </ContentNode>
    ' </ContentNode>

    root = createObject("roSGNode", "ContentNode")
    row = root.createChild("ContentNode")
    episodes = row.createChild("ContentNode")
    episodes.addField("FHDItemWidth", "float", false)
    episodes.setFields({
        title: "Episodes",
        fhdItemWidth: 147
    })

    if includeCastCrew then
        castCrew = row.createChild("ContentNode")
        castCrew.addField("FHDItemWidth", "float", false)
        castCrew.setFields({
            title: "Cast & Crew",
            fhdItemWidth: 212
        })
    end if

    m.episodesOrCastCrewRowList.content = root

End Sub


Function onKeyEvent(key as String, press as Boolean) as Boolean

    if not press then return false


    if key = "back" or key = "up" then

        if m.castCrewRowList.hasFocus() then
            m.episodesOrCastCrewRowList.setFocus(true)
            return true
        end if

        if m.seasonList.hasFocus() then
            m.episodesOrCastCrewRowList.setFocus(true)
            return true
        end if

        if m.episodesList.hasFocus() then
            m.episodesOrCastCrewRowList.setFocus(true)
            return true
        end if

        if m.episodesOrCastCrewRowList.isInFocusChain() then
            m.slideUpAnimation.control = "stop"
            m.slideDownAnimation.control = "stop"
            m.slideDownAnimation.control = "start"
            m.lastFocusedButton.setFocus(true)
            return true
        end if

    end if


    if key = "right" then

        if m.playbackButtonLayoutGroup.isInFocusChain() then
            for i = 0 to m.playbackButtonLayoutGroup.getChildCount() - 2
                if m.playbackButtonLayoutGroup.getChild(i).isInFocusChain() then
                    m.playbackButtonLayoutGroup.getChild(i + 1).setFocus(true)
                    return true
                end if
            next
        end if

        if m.resumeButtonLayoutGroup.isInFocusChain() then
            for i = 0 to m.resumeButtonLayoutGroup.getChildCount() - 2
                if m.resumeButtonLayoutGroup.getChild(i).isInFocusChain() then
                    m.resumeButtonLayoutGroup.getChild(i + 1).setFocus(true)
                    return true
                end if
            next
        end if

        if m.seasonList.hasFocus() then
            m.episodesList.setFocus(true)
            return true
        end if

    end if




    if key = "left" then

        if m.playbackButtonLayoutGroup.isInFocusChain() then
            for i = m.playbackButtonLayoutGroup.getChildCount() - 1 to 1 step -1
                if m.playbackButtonLayoutGroup.getChild(i).isInFocusChain() then
                    m.playbackButtonLayoutGroup.getChild(i - 1).setFocus(true)
                    return true
                end if
            next
        end if

        if m.resumeButtonLayoutGroup.isInFocusChain() then
            for i = m.resumeButtonLayoutGroup.getChildCount() - 1 to 1 step -1
                if m.resumeButtonLayoutGroup.getChild(i).isInFocusChain() then
                    m.resumeButtonLayoutGroup.getChild(i - 1).setFocus(true)
                    return true
                end if
            next
        end if

        if m.episodesList.hasFocus() then
            m.seasonList.setFocus(true)
            return true
        end if

    end if


    
    if key = "down" then

        if m.playbackButtonLayoutGroup.isInFocusChain() or m.resumeButtonLayoutGroup.isInFocusChain() then
            m.slideDownAnimation.control = "stop"
            m.slideUpAnimation.control = "stop"
            m.slideUpAnimation.control = "start"
            m.episodesOrCastCrewRowList.setFocus(true)
            return true
        end if

        if m.episodesOrCastCrewRowList.hasFocus() then

            if GetEpisodeOrCastCrewListSelectedIndex() = 0 then

                m.seasonList.setFocus(true)
                return true
            
            else
                m.castCrewRowList.setFocus(true)
                return true
            end if       

        end if

    end if

    
    return false

End Function
