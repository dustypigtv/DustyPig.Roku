sub Init()
    
    ' Find controls
    m.signupViews = m.top.findNode("signupViews")
    m.headerLabel = m.signupViews.findNode("headerLabel")
    m.nameTextBox = m.signupViews.findNode("nameTextBox")
    m.emailTextBox = m.signupViews.findNode("emailTextBox")
    m.passwordTextBox = m.signupViews.findNode("passwordTextBox")
    m.loginButton = m.signupViews.findNode("loginButton")
    m.signUpButton = m.signupViews.findNode("signUpButton")
    m.busySpinner = m.top.findNode("busySpinner")

   
    ' Button clicks
    m.loginButton.observeField("buttonSelected", "OnLoginButton_Selected")
    m.signUpButton.observeField("buttonSelected", "OnSignUpButton_Selected")



    ' Error dialog
    m.errorDialog = createObject("roSGNode", "StandardMessageDialog")
    m.errorDialog.buttons = ["OK"]
    m.errorDialog.title = "Error"
    m.errorDialog.observeField("buttonSelected", "CloseDialog")



    ' Tasks
    m.signUpTask = CreateObject("roSGNode", "SignUpTask")
    m.signUpTask.observeField("data", "OnSignUpTask_DataAvailable")


    ' Focus Tracking
    m.lastFocused = invalid
    m.top.observeField("visible", "OnThis_VisibleChanged")
    m.top.observeField("focusedChild", "OnThis_FocusChanged")


    ' Init flow
    if m.global.isDev
    
        ' Test user
        m.nameTextBox.text = "New Test User"
        m.emailTextBox.text = "newtestuser@dustypig.tv"
        m.passwordTextBox.text = "test password"
            
    else

        m.channelStore = CreateObject("roSGNode", "ChannelStore")
        
        ' Set sign-in context for RFI screen
        info = CreateObject("roSGNode", "ContentNode")
        info.addFields({context: "signup"})
        m.channelStore.requestedUserDataInfo = info
        
        m.channelStore.requestedUserData = "firstName, email"
        m.channelStore.observeField("userData", "OnChannelStore_DataAvailable")
        m.channelStore.command = "getUserData"
        
    end if

End Sub









' ********** FOCUS TRACKING **********

Sub OnThis_FocusChanged(event as object)

    try
        view = event.getData()
        if view.isSameNode(m.top) then
            if m.lastFocused = invalid then m.lastFocused = m.nameTextBox
            m.lastFocused.setFocus(true)
        else
            sv = view
            while sv <> invalid
                if sv.focusedChild.isSameNode(sv) then
                    m.lastFocused = sv.focusedChild
                    exitwhile
                else
                    sv = sv.focusedChild
                end if
            end while
        end if
    catch e
    end try

End Sub


Sub OnThis_VisibleChanged(event as object)

    if event.getData() then ShowControls(true)

End Sub


Sub ShowControls(s as boolean)

    if not m.top.visible then return

    if s then 

        m.busySpinner.visible = false
        if m.lastFocused = invalid then m.lastFocused = m.nameTextBox
        m.lastFocused.setFocus(true)

    else

        if m.lastFocused <> invalid then
            
            ' Drop focus without losing tracking
            lf = m.lastFocused
            m.lastFocused.setFocus(false)
            m.lastFocused = lf
        
        end if

        m.busySpinner.visible = true

    end if

End Sub








' ********** DIALOG EVENTS **********

Sub OnKeyboardDialog_ButtonSelected(event as object)

    CloseDialog()

    idx = event.getData()
    if idx <> 0 then return

    m.lastFocused.text = event.getRoSGNode().text
    
End Sub

Sub ShowDialog(dlg)

    m.top.getScene().dialog = dlg

End Sub

Sub CloseDialog()

    m.top.getScene().dialog = invalid
    if m.lastFocused <> invalid and not m.lastFocused.hasFocus() then m.lastFocused.setFocus(true)
    
End Sub

Sub ShowErrorDialog(msg as String)

    m.errorDialog.message = [msg]
    ShowDialog(m.errorDialog)

End Sub









' ********** BUTTON CLICKS **********


Sub OnLoginButton_Selected()

    m.global.popView = true
    
End sub


Sub OnSignUpButton_Selected()

    ShowControls(false)

    credentials = GetCredentials()
    m.signUpTask.displayName = credentials.displayName
    m.signUpTask.email = credentials.email
    m.signUpTask.password = credentials.password
    m.signUpTask.control = "RUN"

End Sub










' ********** DATA AVAILABLE CALLBACKS **********

sub OnChannelStore_DataAvailable()

    if m.channelStore.userData <> invalid then
        m.nameTextBox.text = m.channelStore.userData.firstName
        m.emailTextBox.text = m.channelStore.userData.email
        m.passwordTextBox.setFocus(true)
    end if

end sub


Sub OnSignUpTask_DataAvailable()

    ' If signup is a success, this view is dropped and this is never called.
    ' This only fires on error

    ShowControls(true)
    ShowErrorDialog(m.signUpTask.data.error)

End Sub











' ********** Key Presses **********

Function onKeyEvent(key as String, press as Boolean) as Boolean

    if not press then return false

    if key = "up" then
        if m.emailTextBox.hasFocus() then
            m.nameTextBox.setFocus(true)
            return true
        else if m.passwordTextBox.hasFocus() then
            m.emailTextBox.setFocus(true)
            return true
        else if m.signUpButton.hasFocus() then
            m.passwordTextBox.setFocus(true)
            return true
        else if m.loginButton.hasFocus() then
            m.signUpButton.setFocus(true)
            return true
        end if
    end if

    if key = "down" then
        if m.nameTextBox.hasFocus() then
            m.emailTextBox.setFocus(true)
            return true
        else if m.emailTextBox.hasFocus() then
            m.passwordTextBox.setFocus(true)
            return true
        else if m.passwordTextBox.hasFocus() then
            m.signUpButton.setFocus(true)
            return true
        else if m.signUpButton.hasFocus() then
            m.loginButton.setFocus(true)
            return true
        end if
    end if

    
    if key = "OK" then 

        if m.nameTextBox.hasFocus() or m.emailTextBox.hasFocus() or m.passwordTextBox.hasFocus() then

            keyboardDialog = createObject("roSGNode", "StandardKeyboardDialog")
            keyboardDialog.buttons=["OK", "Cancel"]
            keyboardDialog.observeField("buttonSelected", "OnKeyboardDialog_ButtonSelected")

            if m.nameTextBox.hasFocus() then
                keyboardDialog.title = "Name:"
                keyboardDialog.keyBoardDomain = "generic"
            else if m.emailTextBox.hasFocus() then
                keyboardDialog.title = "Email Address:"
                keyboardDialog.keyBoardDomain = "email"
            else
                keyboardDialog.title = "Password:"
                keyboardDialog.keyBoardDomain = "password"
            end if

            keyboardDialog.text = m.lastFocused.text
            keyboardDialog.textEditBox.secureMode = m.passwordTextBox.hasFocus()
            
            ShowDialog(keyboardDialog)
            return true

        end if
        

    end if

    return false

End Function






' ********** UTILITIES **********

Function GetCredentials() as object

    displayName = m.nameTextBox.text
    if displayName = invalid or displayName = "" then return invalid

    email = m.emailTextBox.text
    if email = invalid or email = "" then return invalid

    password = m.passwordTextBox.text
    if password = invalid or password = "" then return invalid

    return { "displayName": displayName, "email": email, "password": password }

End Function

