function ProfilesToNode(data as object) as object

    ' Create a root content node, with child nodes holding info
    ret = createObject("roSGNode", "ContentNode")
    for each item in data
        
        bp = ret.createChild("ContentNode")
        bp.id = item.id.ToStr()
        bp.HDGRIDPOSTERURL = item.avatarUrl
        bp.SHORTDESCRIPTIONLINE1 = item.name
        bp.addFields({initials: item.initials, isMain: item.isMain, hasPin: item.hasPin})

    end for

    return ret

end function



Function GetDurationString(totalSeconds As float) As String

    remaining = Int(totalSeconds)
    hours = Int(remaining / 3600).ToStr()
    remaining = remaining Mod 3600
    minutes = Int(remaining / 60).ToStr()
    remaining = remaining Mod 60
    seconds = remaining.ToStr()

    If hours <> "0" Then
        ret = hours + " hr"
        if hours <> "1" then ret = ret + "s"
        Return ret + " " + minutes + " min"
    Else
        Return minutes + " min"
    End If

End Function

Function PadLeft(value As String, padChar As String, totalLength As Integer) As String
    
    While value.Len() < totalLength
        value = padChar + value
    End While
    
    Return value

End Function


Function StringHasValue(s as object) as boolean

    if s = invalid then return false
    if getInterface(s, "ifString") = invalid then return false
    if s.IsEmpty() then return false
    if s.trim().IsEmpty() then return false
    return true

End Function


Function FindChildNode(node as roSGNode, id as string) as roSGNode

    ' Sometimes, node.findNode(id) fails. Not sure why. So this is a backup
    if node = invalid then return invalid
    if not StringHasValue(id) then return invalid
    
    try
        ret = node.findNode(Id)
        if ret <> invalid then return ret
    catch e
    end try

    for i = 0 to node.getChildCount() - 1
        child = node.getChild(i)
        if child.id = id then return child
    end for

    return invalid

End Function




Sub SetCurrentBasicMedia(media as object)

    doIt = m.global.currentBasicMedia = invalid
    if not doIt then doIt = m.global.currentBasicMedia.mediaType <> media.mediaType
    if not doIt then doIt = m.global.currentBasicMedia.id <> media.id
    
    if doIt then m.global.currentBasicMedia = media

End Sub



Function BuildBasicMediaFromDetailed(src as object) as object

    ' For movies, the year is in the secondary title
    title = src.title
    if src.mediaType = 1 then title = title + " (" + src.secondaryTitle + ")"

    node = createObject("roSGNode", "BasicMediaNode")
    node.setFields({
        id: src.id,
        title: title,
        description: src.description,
        sdGridPosterUrl: src.sdGridPosterUrl,
        hdGridPosterUrl: src.hdGridPosterUrl,
        fhdGridPosterUrl: src.fhdGridPosterUrl,
        mediaType: src.mediaType,
        backdropUrl: src.backdropUrl
    })

End function


Sub SetBasicMediaFields(src as object, dst as object)

    dst.setFields({
        id: src.id.ToStr(),
        title: src.title,
        description: src.description,
        sdGridPosterUrl: src.artworkUrl,
        hdGridPosterUrl: src.artworkUrl,
        fhdGridPosterUrl: src.artworkUrl,
        mediaType: src.mediaType,
        backdropUrl: src.backdropUrl
    })
   
End Sub